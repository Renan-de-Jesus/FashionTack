<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="av"
    x:Class="FashionTrack.ProductRegister"
    Title="Product Registration"
    Width="1366"
    Height="768"
    WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <Style x:Key="HoverButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    To="#1B8FFC"
                                    Duration="0:0:0.1" />
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(Control.Background).(Brush.Opacity)"
                                    To="0.69"
                                    Duration="0:0:0.1" />
                                <ColorAnimation
                                    Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    To="White"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    To="#2888E3"
                                    Duration="0:0:0.1" />
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(Control.Background).(Brush.Opacity)"
                                    To="1.0"
                                    Duration="0:0:0.1" />
                                <ColorAnimation
                                    Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    To="White"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="CustomComboBoxTemplate" TargetType="ComboBox">
            <Grid>
                <ToggleButton x:Name="ToggleButton"
                              Template="{StaticResource ComboBoxToggleButton}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Focusable="False"
                              ClickMode="Press">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="DarkGray" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Gray" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter x:Name="ContentSite"
                                  IsHitTestVisible="False"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  Margin="3,3,23,3"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left" />
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Slide">
                    <Grid x:Name="DropDown"
                          SnapsToDevicePixels="True"
                          MinWidth="{TemplateBinding ActualWidth}"
                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="DropDownBorder"
                                Background="White"
                                BorderBrush="Gray"
                                BorderThickness="1" />
                        <ScrollViewer Margin="4,6,4,6"
                                       SnapsToDevicePixels="True">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Grid>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ToggleButton" Property="Background" Value="DarkGray" />
                </Trigger>
                <Trigger Property="IsDropDownOpen" Value="True">
                    <Setter TargetName="DropDownBorder" Property="Background" Value="LightGray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Template" Value="{StaticResource CustomComboBoxTemplate}" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="DarkGray" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Search Button -->
        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <TextBox x:Name="SearchTextBox" Width="200" Margin="5"/>
            <TextBlock Text="Buscar por Nome ou ID" Foreground="Gray" VerticalAlignment="Center" Margin="10,0,0,0" IsHitTestVisible="False" Visibility="{Binding Text, ElementName=SearchTextBox, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            <Button x:Name="SearchButton" Content="Buscar" Width="100" Height="30" Margin="5" Click="SearchButton_Click"/>
            <TextBox x:Name="SearchIDTextBox" Width="200" Margin="5" PreviewTextInput="SearchIDTextBox_PreviewTextInput" TextChanged="SearchIDTextBox_TextChanged"/>
            <Button x:Name="SearchIDButton" Content="Buscar por ID" Width="100" Height="30" Click="SearchIDButton_Click"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0" Margin="10">
            <Label Content="Brand"/>
            <StackPanel Orientation="Horizontal">
                <ComboBox x:Name="BrandComboBox" Width="200" Margin="5" SelectionChanged="BrandComboBox_SelectionChanged"/>
                <Button x:Name="OpenBrandRegisterButton" Content="Cadastrar Marca" Width="120" Height="30" Click="OpenBrandRegisterButton_Click" Margin="5"/>
            </StackPanel>

            <Label Content="Brand Code"/>
            <Grid>
                <TextBox x:Name="BrandCodeTextBox" Width="200" Margin="5" TextChanged="BrandCodeTextBox_TextChanged"/>
                <TextBlock Text="Código da Marca" Foreground="Gray" VerticalAlignment="Center" Margin="10,0,0,0" IsHitTestVisible="False" Visibility="{Binding Text, ElementName=BrandCodeTextBox, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            </Grid>

            <Label Content="Color"/>
            <StackPanel Orientation="Horizontal">
                <ComboBox x:Name="ColorComboBox" Width="200" Margin="5" SelectionChanged="ColorComboBox_TextChanged"/>
                <Button x:Name="OpenColorRegisterButton" Content="Cadastrar Cor" Width="120" Height="30" Click="OpenColorRegisterButton_Click" Margin="5"/>
            </StackPanel>

            <Label Content="Description"/>
            <Grid>
                <TextBox x:Name="DescriptionTextBox" Width="200" Margin="5" TextChanged="DescriptionTextBox_TextChanged"/>
                <TextBlock Text="Descrição" Foreground="Gray" VerticalAlignment="Center" Margin="10,0,0,0" IsHitTestVisible="False" Visibility="{Binding Text, ElementName=DescriptionTextBox, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            </Grid>

            <Label Content="Size"/>
            <StackPanel Orientation="Horizontal">
                <ComboBox x:Name="SizeComboBox" Width="200" Margin="5" SelectionChanged="SizeComboBox_SelectionChanged"/>
                <Button x:Name="OpenSizeRegisterButton" Content="Cadastrar Tamanho" Width="120" Height="30" Click="OpenSizeRegisterButton_Click" Margin="5"/>
            </StackPanel>

            <Label Content="Gender"/>
            <ComboBox x:Name="GenderComboBox" Width="200" Margin="5" SelectionChanged="GenderComboBox_SelectionChanged">
                <ComboBoxItem Content="Masculino"/>
                <ComboBoxItem Content="Feminino"/>
                <ComboBoxItem Content="Unissex"/>
            </ComboBox>

            <Label Content="Price"/>
            <Grid>
                <TextBox x:Name="PriceTextBox" Width="200" Margin="5" TextChanged="PriceTextBox_TextChanged" PreviewTextInput="PriceTextBox_PreviewTextInput"/>
                <TextBlock Text="Preço" Foreground="Gray" VerticalAlignment="Center" Margin="10,0,0,0" IsHitTestVisible="False" Visibility="{Binding Text, ElementName=PriceTextBox, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            </Grid>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" Margin="10">
            <Button Content="Save" Click="SaveButton_Click" Height="34" Width="126" Margin="5" HorizontalAlignment="Center" Style="{StaticResource HoverButtonStyle}" IsEnabled="{Binding IsModified}">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness=".5"
                            CornerRadius="08">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
    </Grid>
</Window>
